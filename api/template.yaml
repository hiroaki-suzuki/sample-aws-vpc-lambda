AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample for vpc lambda

Parameters:
  LambdaRole:
    Type: String
    Description: Role for Lambda
  LambdaSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet for Lambda
  LambdaSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet for Lambda
  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security Group for Lambda
  DBHost:
    Type: String
    Description: DB Host
  DBUser:
    Type: String
    Description: DB User
  DBPassword:
    Type: String
    Description: DB Password
  Timeout:
    Type: Number
    Description: Timeout for Lambda
    Default: "3"

Globals:
  Function:
    Timeout: !Ref Timeout
    MemorySize: 128

    Tracing: Active
    VpcConfig:
      SubnetIds:
        - !Ref LambdaSubnet1
        - !Ref LambdaSubnet2
      SecurityGroupIds:
        - !Ref LambdaSecurityGroup
    Environment:
      Variables:
        DB_HOST: !Ref DBHost
        DB_USER: !Ref DBUser
        DB_PASSWORD: !Ref DBPassword

  Api:
    TracingEnabled: true
    Cors:
      AllowMethods: "'POST, GET, PUT, DELETE, OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Requested-With,X-Requested-By,X-Api-Key'"
      AllowOrigin: "'*'"
      AllowCredentials: "'true'"

Resources:
  GetMessages:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/get_messages
      Handler: app.lambda_handler
      Runtime: python3.9
      Role: !Ref LambdaRole
      Architectures:
        - x86_64
      Layers:
        - !Ref AppLayer
      Events:
        GetMessages:
          Type: Api
          Properties:
            Path: /message
            Method: get
  SaveMessage:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/save_message
      Handler: app.lambda_handler
      Runtime: python3.9
      Role: !Ref LambdaRole
      Architectures:
        - x86_64
      Layers:
        - !Ref AppLayer
      Events:
        SaveMessage:
          Type: Api
          Properties:
            Path: /message
            Method: post
  AppLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: src/app_layer
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

Outputs:
  GetMessagesApi:
    Description: API Gateway endpoint URL for Prod stage for Get Messages function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/message/"
  GetMessagesFunction:
    Description: Get Messages Lambda Function ARN
    Value: !GetAtt GetMessages.Arn
  SaveMessageApi:
    Description: API Gateway endpoint URL for Prod stage for Save Message function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/message/"
  SaveMessageFunction:
    Description: Save Message Lambda Function ARN
    Value: !GetAtt SaveMessage.Arn
